// This file is auto-generated by @hey-api/openapi-ts

export const UserSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    email: {
      type: "string",
    },
    emailVerified: {
      type: "boolean",
      default: "Generated at runtime",
    },
    image: {
      type: "string",
    },
    createdAt: {
      type: "string",
      default: "Generated at runtime",
    },
    updatedAt: {
      type: "string",
      default: "Generated at runtime",
    },
    username: {
      type: "string",
    },
    displayUsername: {
      type: "string",
    },
  },
  required: ["name", "email", "emailVerified", "createdAt", "updatedAt"],
} as const;

export const SessionSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    expiresAt: {
      type: "string",
    },
    token: {
      type: "string",
    },
    createdAt: {
      type: "string",
    },
    updatedAt: {
      type: "string",
    },
    ipAddress: {
      type: "string",
    },
    userAgent: {
      type: "string",
    },
    userId: {
      type: "string",
    },
  },
  required: ["expiresAt", "token", "createdAt", "updatedAt", "userId"],
} as const;

export const AccountSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    accountId: {
      type: "string",
    },
    providerId: {
      type: "string",
    },
    userId: {
      type: "string",
    },
    accessToken: {
      type: "string",
    },
    refreshToken: {
      type: "string",
    },
    idToken: {
      type: "string",
    },
    accessTokenExpiresAt: {
      type: "string",
    },
    refreshTokenExpiresAt: {
      type: "string",
    },
    scope: {
      type: "string",
    },
    password: {
      type: "string",
    },
    createdAt: {
      type: "string",
    },
    updatedAt: {
      type: "string",
    },
  },
  required: ["accountId", "providerId", "userId", "createdAt", "updatedAt"],
} as const;

export const VerificationSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    identifier: {
      type: "string",
    },
    value: {
      type: "string",
    },
    expiresAt: {
      type: "string",
    },
    createdAt: {
      type: "string",
      default: "Generated at runtime",
    },
    updatedAt: {
      type: "string",
      default: "Generated at runtime",
    },
  },
  required: ["identifier", "value", "expiresAt"],
} as const;

export const RoleSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    createdAt: {
      type: "string",
      default: "Generated at runtime",
      readOnly: true,
    },
    updatedAt: {
      type: "string",
      default: "Generated at runtime",
      readOnly: true,
    },
    createdBy: {
      type: "string",
      readOnly: true,
    },
    updatedBy: {
      type: "string",
      readOnly: true,
    },
    name: {
      type: "string",
    },
    enabled: {
      type: "boolean",
    },
    remark: {
      type: "string",
    },
  },
  required: ["name"],
} as const;

export const ResourceSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    createdAt: {
      type: "string",
      default: "Generated at runtime",
      readOnly: true,
    },
    updatedAt: {
      type: "string",
      default: "Generated at runtime",
      readOnly: true,
    },
    createdBy: {
      type: "string",
      readOnly: true,
    },
    updatedBy: {
      type: "string",
      readOnly: true,
    },
    name: {
      type: "string",
    },
    enabled: {
      type: "boolean",
    },
    remark: {
      type: "string",
    },
    sort: {
      type: "number",
    },
    parentId: {
      type: "string",
    },
    type: {
      type: "string",
      enum: ["Menu", "Page", "Element"],
    },
    path: {
      type: "string",
    },
    activePath: {
      type: "string",
    },
    component: {
      type: "string",
    },
    icon: {
      type: "string",
    },
    isLink: {
      type: "boolean",
    },
    isCache: {
      type: "boolean",
    },
    isAffix: {
      type: "boolean",
    },
    isShow: {
      type: "boolean",
    },
  },
  required: ["name", "type"],
} as const;

export const UserRoleRelationSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    userId: {
      type: "string",
    },
    roleId: {
      type: "string",
    },
  },
  required: ["userId", "roleId"],
} as const;

export const RoleResourceRelationSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    roleId: {
      type: "string",
    },
    resourceId: {
      type: "string",
    },
  },
  required: ["roleId", "resourceId"],
} as const;

export const ResourceNodeSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    createdAt: {
      type: "string",
      default: "Generated at runtime",
      readOnly: true,
    },
    updatedAt: {
      type: "string",
      default: "Generated at runtime",
      readOnly: true,
    },
    createdBy: {
      type: "string",
      readOnly: true,
    },
    updatedBy: {
      type: "string",
      readOnly: true,
    },
    name: {
      type: "string",
    },
    enabled: {
      type: "boolean",
    },
    remark: {
      type: "string",
    },
    sort: {
      type: "number",
    },
    parentId: {
      type: "string",
    },
    type: {
      type: "string",
      enum: ["Menu", "Page", "Element"],
    },
    path: {
      type: "string",
    },
    activePath: {
      type: "string",
    },
    component: {
      type: "string",
    },
    icon: {
      type: "string",
    },
    isLink: {
      type: "boolean",
    },
    isCache: {
      type: "boolean",
    },
    isAffix: {
      type: "boolean",
    },
    isShow: {
      type: "boolean",
    },
    children: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ResourceNode",
      },
    },
  },
  required: ["name", "type"],
} as const;
