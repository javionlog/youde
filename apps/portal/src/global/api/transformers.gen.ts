// This file is auto-generated by @hey-api/openapi-ts

import type {
  GetAuthListAccountsResponse,
  PostAuthChangePasswordResponse,
  PostAuthGetAccessTokenResponse,
  PostAuthRbacGetUserResourceTreeResponse,
  PostAuthRbacListResourceTreeResponse,
  PostAuthRbacListRoleResourceTreeResponse,
  PostAuthRbacListUserResourceTreeResponse,
  PostAuthRefreshTokenResponse,
  PostAuthSignInEmailResponse,
  PostAuthSignUpEmailResponse,
  PostGuestThingListResponse,
  PostThingCreateResponse,
  PostThingGetResponse,
  PostThingListResponse,
  PostThingUpdateResponse,
} from "./types.gen";

export const postGuestThingListResponseTransformer = async (
  data: any,
): Promise<PostGuestThingListResponse> => {
  data.records = data.records.map((item: any) => {
    if (item.createdAt) {
      item.createdAt = new Date(item.createdAt);
    }
    if (item.updatedAt) {
      item.updatedAt = new Date(item.updatedAt);
    }
    return item;
  });
  return data;
};

export const postThingCreateResponseTransformer = async (
  data: any,
): Promise<PostThingCreateResponse> => {
  if (data.createdAt) {
    data.createdAt = new Date(data.createdAt);
  }
  if (data.updatedAt) {
    data.updatedAt = new Date(data.updatedAt);
  }
  return data;
};

export const postThingUpdateResponseTransformer = async (
  data: any,
): Promise<PostThingUpdateResponse> => {
  if (data.createdAt) {
    data.createdAt = new Date(data.createdAt);
  }
  if (data.updatedAt) {
    data.updatedAt = new Date(data.updatedAt);
  }
  return data;
};

export const postThingGetResponseTransformer = async (
  data: any,
): Promise<PostThingGetResponse> => {
  if (data.createdAt) {
    data.createdAt = new Date(data.createdAt);
  }
  if (data.updatedAt) {
    data.updatedAt = new Date(data.updatedAt);
  }
  return data;
};

export const postThingListResponseTransformer = async (
  data: any,
): Promise<PostThingListResponse> => {
  data.records = data.records.map((item: any) => {
    if (item.createdAt) {
      item.createdAt = new Date(item.createdAt);
    }
    if (item.updatedAt) {
      item.updatedAt = new Date(item.updatedAt);
    }
    return item;
  });
  return data;
};

export const postAuthSignUpEmailResponseTransformer = async (
  data: any,
): Promise<PostAuthSignUpEmailResponse> => {
  data.user.createdAt = new Date(data.user.createdAt);
  data.user.updatedAt = new Date(data.user.updatedAt);
  return data;
};

export const postAuthSignInEmailResponseTransformer = async (
  data: any,
): Promise<PostAuthSignInEmailResponse> => {
  data.user.createdAt = new Date(data.user.createdAt);
  data.user.updatedAt = new Date(data.user.updatedAt);
  return data;
};

export const postAuthChangePasswordResponseTransformer = async (
  data: any,
): Promise<PostAuthChangePasswordResponse> => {
  data.user.createdAt = new Date(data.user.createdAt);
  data.user.updatedAt = new Date(data.user.updatedAt);
  return data;
};

export const getAuthListAccountsResponseTransformer = async (
  data: any,
): Promise<GetAuthListAccountsResponse> => {
  data = data.map((item: any) => {
    if (item.createdAt) {
      item.createdAt = new Date(item.createdAt);
    }
    if (item.updatedAt) {
      item.updatedAt = new Date(item.updatedAt);
    }
    return item;
  });
  return data;
};

export const postAuthRefreshTokenResponseTransformer = async (
  data: any,
): Promise<PostAuthRefreshTokenResponse> => {
  if (data.accessTokenExpiresAt) {
    data.accessTokenExpiresAt = new Date(data.accessTokenExpiresAt);
  }
  if (data.refreshTokenExpiresAt) {
    data.refreshTokenExpiresAt = new Date(data.refreshTokenExpiresAt);
  }
  return data;
};

export const postAuthGetAccessTokenResponseTransformer = async (
  data: any,
): Promise<PostAuthGetAccessTokenResponse> => {
  if (data.accessTokenExpiresAt) {
    data.accessTokenExpiresAt = new Date(data.accessTokenExpiresAt);
  }
  if (data.refreshTokenExpiresAt) {
    data.refreshTokenExpiresAt = new Date(data.refreshTokenExpiresAt);
  }
  return data;
};

export const postAuthRbacListUserResourceTreeResponseTransformer = async (
  data: any,
): Promise<PostAuthRbacListUserResourceTreeResponse> => {
  data = data.map((item: any) => {
    return resourceNodeSchemaResponseTransformer(item);
  });
  return data;
};

const resourceNodeSchemaResponseTransformer = (data: any) => {
  if (data.children) {
    data.children = data.children.map((item: any) => {
      return resourceNodeSchemaResponseTransformer(item);
    });
  }
  return data;
};

export const postAuthRbacListRoleResourceTreeResponseTransformer = async (
  data: any,
): Promise<PostAuthRbacListRoleResourceTreeResponse> => {
  data = data.map((item: any) => {
    return resourceNodeSchemaResponseTransformer(item);
  });
  return data;
};

export const postAuthRbacListResourceTreeResponseTransformer = async (
  data: any,
): Promise<PostAuthRbacListResourceTreeResponse> => {
  data = data.map((item: any) => {
    return resourceNodeSchemaResponseTransformer(item);
  });
  return data;
};

export const postAuthRbacGetUserResourceTreeResponseTransformer = async (
  data: any,
): Promise<PostAuthRbacGetUserResourceTreeResponse> => {
  data = data.map((item: any) => {
    return resourceNodeSchemaResponseTransformer(item);
  });
  return data;
};
